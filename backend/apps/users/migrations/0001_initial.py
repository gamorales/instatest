# Generated by Django 3.0 on 2019-12-18 15:22

from django.db import migrations, models

from apps.users.models import User


class Migration(migrations.Migration):

    initial = True

    def create_default_user(apps, schema_editor):
        user = User.objects.create_superuser(email='info@info.com', password='ArPg30202/**/')
        user.save()
        user = User.objects.create_superuser(email='pablopantoja@useitweb.com', password='ArPg30202/**/')
        user.save()
        user = User.objects.create_superuser(email='luisrosero@useitweb.com', password='ArPg30202/**/')
        user.save()

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(error_messages={'unique': 'The email is already registered'}, max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_online', models.DateTimeField(blank=True, null=True)),
                ('recovery_code', models.UUIDField(blank=True, null=True)),
                ('activate_code', models.UUIDField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_verificated', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['first_name'],
            },
        ),

        migrations.RunPython(create_default_user),
    ]
